{"ast":null,"code":"var _jsxFileName = \"/Users/tcnak/Documents/test/musicapp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Page from './Components/Page';\nimport ListView from './Components/ListView';\nimport Header from './Components/Header';\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeState = newPage => {\n      console.log(newPage);\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.removeFunc = (item, list) => {};\n\n    this.state = {\n      page: 'LandingPage',\n      currentPlaylist: {},\n      playlists: [{\n        name: 'Example',\n        songs: [{\n          name: '3 nights by',\n          artist: 'Dominic Fike'\n        }]\n      }],\n      songNames: [{\n        name: '3 nights by',\n        artist: 'Dominic Fike'\n      }, {\n        name: 'Bang!',\n        artist: 'AJR'\n      }, {\n        name: 'Tribe',\n        artist: 'Jim Swim'\n      }, {\n        name: 'Feels Right',\n        artist: 'Danny\\'s dead'\n      }, {\n        name: 'Mariposa',\n        artist: 'Peach Tree Rascals'\n      }, {\n        name: 'Blinding Lights',\n        artist: 'The Weeknd'\n      }, {\n        name: 'Thriller',\n        artist: 'Michael Jackson'\n      }, {\n        name: 'Yellow Submarine',\n        artist: 'The Beatles'\n      }, {\n        name: 'USSR',\n        artist: 'The Beatles'\n      }],\n      librarySongNames: [{\n        name: 'Mariposa',\n        artist: 'Peach Tree Rascals'\n      }, {\n        name: 'Blinding Lights',\n        artist: 'The Weeknd'\n      }, {\n        name: 'Thriller',\n        artist: 'Michael Jackson'\n      }, {\n        name: 'Yellow Submarine',\n        artist: 'The Beatles'\n      }, {\n        name: 'USSR',\n        artist: 'The Beatles'\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, this.state.page === 'LandingPage' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Playlists' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        addButtonHandler: () => {\n          const newPlaylist = {\n            name: 'Default Playlist',\n            songs: []\n          };\n          var temp = this.state.playlists;\n          temp.push(newPlaylist);\n          this.setState({\n            page: 'Edit List',\n            currentPlaylist: newPlaylist,\n            playlists: temp\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.playlists,\n        onClick: currentPlaylist => {\n          this.setState({\n            page: 'Edit List',\n            currentPlaylist\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Now Playing' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Search' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.songNames,\n        onClick: song => {\n          var temp = this.state.currentPlaylist.songs ? this.state.currentPlaylist.songs : [];\n          temp.push(song);\n          this.setState({\n            currentPlaylist: { ...this.state.currentPlaylist,\n              songs: temp\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Library' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.librarySongNames,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Edit List' && /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        name: this.state.currentPlaylist ? this.state.currentPlaylist.name : 'N/A',\n        addButtonHandler: () => {\n          this.setState({\n            page: 'Search'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.currentPlaylist.songs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tcnak/Documents/test/musicapp/src/App.js"],"names":["React","Page","ListView","Header","App","PureComponent","constructor","props","changeState","newPage","console","log","setState","page","removeFunc","item","list","state","currentPlaylist","playlists","name","songs","artist","songNames","librarySongNames","render","newPlaylist","temp","push","song"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Page from './Components/Page';\nimport ListView from './Components/ListView';\nimport Header from './Components/Header';\n\nexport default class App extends React.PureComponent {\n  constructor(props){\n    super(props)\n    this.state = {\n      page: 'LandingPage',\n      currentPlaylist: {},\n      playlists: [\n        {\n          name: 'Example',\n          songs: [\n            {\n              name: '3 nights by',\n              artist: 'Dominic Fike'\n            }, \n          ]\n        }\n      ],\n      songNames: [\n        {\n          name: '3 nights by',\n          artist: 'Dominic Fike'\n        }, \n        {\n          name: 'Bang!',\n          artist: 'AJR',\n        },\n        {\n          name: 'Tribe',\n          artist: 'Jim Swim'\n        },\n        {\n          name: 'Feels Right',\n          artist: 'Danny\\'s dead'\n        },\n        {\n          name: 'Mariposa',\n          artist: 'Peach Tree Rascals'\n        },\n        {\n          name: 'Blinding Lights',\n          artist: 'The Weeknd'\n        },\n        {\n          name: 'Thriller',\n          artist: 'Michael Jackson'\n        },\n        {\n          name: 'Yellow Submarine',\n          artist: 'The Beatles'\n        },\n        {\n          name: 'USSR',\n          artist: 'The Beatles'\n        },\n      ],\n      librarySongNames: [\n        {\n          name: 'Mariposa',\n          artist: 'Peach Tree Rascals'\n        },\n        {\n          name: 'Blinding Lights',\n          artist: 'The Weeknd'\n        },\n        {\n          name: 'Thriller',\n          artist: 'Michael Jackson'\n        },\n        {\n          name: 'Yellow Submarine',\n          artist: 'The Beatles'\n        },\n        {\n          name: 'USSR',\n          artist: 'The Beatles'\n        },\n      ],\n    }\n  }\n\n  changeState = (newPage) => {\n    console.log(newPage)\n    this.setState({page: newPage})\n  }\n\n  removeFunc = (item, list) => {\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.page === 'LandingPage' ?\n          <Page pageChanger = {this.changeState}/>\n        : this.state.page === 'Playlists' ?\n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header \n                  page = {this.state.page}\n                  addButtonHandler = {() => {\n                    const newPlaylist = {\n                      name: 'Default Playlist',\n                      songs: []\n                    }\n                    var temp = this.state.playlists\n                    temp.push(newPlaylist)\n                    this.setState({page: 'Edit List', currentPlaylist: newPlaylist, playlists: temp})\n                  }}\n                />\n                <ListView \n                  pageChanger = {this.changeState} \n                  data = {this.state.playlists}\n                  onClick = {(currentPlaylist) => {\n                    this.setState({page: 'Edit List', currentPlaylist})\n                  }}\n                />\n              </>\n            }\n          />\n        : this.state.page === 'Now Playing' ?\n          <Page \n            pageChanger = {this.changeState}\n          />\n        : this.state.page === 'Search' ?\n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header page = {this.state.page}/>\n                <ListView \n                  pageChanger = {this.changeState} \n                  data = {this.state.songNames}\n                  onClick = {(song) => {\n                    var temp = this.state.currentPlaylist.songs ? this.state.currentPlaylist.songs : []\n                    temp.push(song)\n                    this.setState({currentPlaylist: {\n                      ...this.state.currentPlaylist,\n                      songs: temp\n                    }})\n                  }}\n                />\n              </>\n            }\n          />\n        : this.state.page === 'Library' ?\n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header page = {this.state.page}/>\n                <ListView pageChanger = {this.changeState} data = {this.state.librarySongNames}/>\n              </>\n            }\n          />\n        : this.state.page === 'Edit List' && \n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header \n                  page = {this.state.page}\n                  name = {this.state.currentPlaylist ? this.state.currentPlaylist.name : 'N/A'}\n                  addButtonHandler = {() => {\n                    this.setState({page: 'Search'})\n                  }}\n                />\n                <ListView pageChanger = {this.changeState} data = {this.state.currentPlaylist.songs}/>\n              </>\n            }\n          />\n        }\n      </div>\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}