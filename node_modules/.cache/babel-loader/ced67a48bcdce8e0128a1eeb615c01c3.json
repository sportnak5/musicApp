{"ast":null,"code":"var _jsxFileName = \"/Users/tcnak/Documents/musicApp/src/Pages/Search.js\";\nimport React from 'react';\nimport Page from '../Components/Page';\nimport Header from '../Components/Header';\nimport ListView from '../Components/ListView';\nexport default class Search extends React.PureComponent {\n  render() {\n    return /*#__PURE__*/React.createElement(Page, {\n      pageChanger: newPage => this.props.setState({\n        page: newPage\n      }),\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.props.state.page,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"song name\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: newPage => this.props.setState({\n          page: newPage\n        }),\n        data: this.props.state.searchResults.length === 0 ? this.props.state.songNames : this.props.state.searchResults,\n        onClick: song => {\n          if (this.props.state.previousPage === 'Edit List') {\n            var temp = this.props.state.currentPlaylist.songs;\n            temp.push(song);\n            this.setState({\n              currentPlaylist: { ...this.props.state.currentPlaylist,\n                songs: temp\n              }\n            });\n          } else if (this.props.state.previousPage === 'Library') {\n            var temp = this.props.state.librarySongs;\n            temp.push(song);\n            this.setState({\n              librarySongs: temp\n            });\n          } else if (this.props.state.previousPage === 'Edit Queue') {\n            var temp = this.props.state.queue;\n            temp.push(song);\n            this.setState({\n              queue: temp\n            });\n          } else {\n            console.log('oops');\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/tcnak/Documents/musicApp/src/Pages/Search.js"],"names":["React","Page","Header","ListView","Search","PureComponent","render","newPage","props","setState","page","state","handleChange","searchResults","length","songNames","song","previousPage","temp","currentPlaylist","songs","push","librarySongs","queue","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,eAAe,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,aAA3B,CAAwC;AACnDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,IAAD;AACI,MAAA,WAAW,EAAKC,OAAD,IAAa,KAAKC,KAAL,CAAWC,QAAX,CAAoB;AAACC,QAAAA,IAAI,EAAEH;AAAP,OAApB,CADhC;AAEI,MAAA,QAAQ,eACJ,uDACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAI,KAAKC,KAAL,CAAWG,KAAX,CAAiBD,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,IAAI,EAAG,WAA5B;AAAwC,QAAA,QAAQ,EAAI,KAAKE,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,QAAD;AACI,QAAA,WAAW,EAAKL,OAAD,IAAa,KAAKC,KAAL,CAAWC,QAAX,CAAoB;AAACC,UAAAA,IAAI,EAAEH;AAAP,SAApB,CADhC;AAEI,QAAA,IAAI,EAAI,KAAKC,KAAL,CAAWG,KAAX,CAAiBE,aAAjB,CAA+BC,MAA/B,KAA0C,CAA1C,GAA8C,KAAKN,KAAL,CAAWG,KAAX,CAAiBI,SAA/D,GAA2E,KAAKP,KAAL,CAAWG,KAAX,CAAiBE,aAFxG;AAGI,QAAA,OAAO,EAAKG,IAAD,IAAU;AACjB,cAAI,KAAKR,KAAL,CAAWG,KAAX,CAAiBM,YAAjB,KAAkC,WAAtC,EAAkD;AAC9C,gBAAIC,IAAI,GAAG,KAAKV,KAAL,CAAWG,KAAX,CAAiBQ,eAAjB,CAAiCC,KAA5C;AACAF,YAAAA,IAAI,CAACG,IAAL,CAAUL,IAAV;AACA,iBAAKP,QAAL,CAAc;AAACU,cAAAA,eAAe,EAAE,EAC5B,GAAG,KAAKX,KAAL,CAAWG,KAAX,CAAiBQ,eADQ;AAE5BC,gBAAAA,KAAK,EAAEF;AAFqB;AAAlB,aAAd;AAIH,WAPD,MAOO,IAAI,KAAKV,KAAL,CAAWG,KAAX,CAAiBM,YAAjB,KAAkC,SAAtC,EAAgD;AACnD,gBAAIC,IAAI,GAAG,KAAKV,KAAL,CAAWG,KAAX,CAAiBW,YAA5B;AACAJ,YAAAA,IAAI,CAACG,IAAL,CAAUL,IAAV;AACA,iBAAKP,QAAL,CAAc;AAACa,cAAAA,YAAY,EAAEJ;AAAf,aAAd;AACH,WAJM,MAIA,IAAI,KAAKV,KAAL,CAAWG,KAAX,CAAiBM,YAAjB,KAAkC,YAAtC,EAAmD;AACtD,gBAAIC,IAAI,GAAG,KAAKV,KAAL,CAAWG,KAAX,CAAiBY,KAA5B;AACAL,YAAAA,IAAI,CAACG,IAAL,CAAUL,IAAV;AACA,iBAAKP,QAAL,CAAc;AAACc,cAAAA,KAAK,EAAEL;AAAR,aAAd;AACH,WAJM,MAIA;AACHM,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACJ,SAtBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAmCH;;AArCkD","sourcesContent":["import React from 'react';\nimport Page from '../Components/Page';\nimport Header from '../Components/Header';\nimport ListView from '../Components/ListView';\n\nexport default class Search extends React.PureComponent{\n    render() {\n        return(\n            <Page \n                pageChanger = {(newPage) => this.props.setState({page: newPage})} \n                contents = {\n                    <>\n                        <Header page = {this.props.state.page}/>\n                        <input type = 'text' name = 'song name' onChange = {this.handleChange}/>\n                        <ListView \n                            pageChanger = {(newPage) => this.props.setState({page: newPage})} \n                            data = {this.props.state.searchResults.length === 0 ? this.props.state.songNames : this.props.state.searchResults}\n                            onClick = {(song) => {\n                                if (this.props.state.previousPage === 'Edit List'){\n                                    var temp = this.props.state.currentPlaylist.songs\n                                    temp.push(song)\n                                    this.setState({currentPlaylist: {\n                                        ...this.props.state.currentPlaylist,\n                                        songs: temp\n                                    }})\n                                } else if (this.props.state.previousPage === 'Library'){\n                                    var temp = this.props.state.librarySongs\n                                    temp.push(song)\n                                    this.setState({librarySongs: temp})\n                                } else if (this.props.state.previousPage === 'Edit Queue'){\n                                    var temp = this.props.state.queue\n                                    temp.push(song)\n                                    this.setState({queue: temp})\n                                } else {\n                                    console.log('oops')\n                                }\n                            }}\n                        />\n                    </>\n                }\n            />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}