{"ast":null,"code":"var _jsxFileName = \"/Users/tcnak/Documents/test/musicapp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Page from './Components/Page';\nimport ListView from './Components/ListView';\nimport Header from './Components/Header';\nimport NowPlaying from './Components/NowPlaying';\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeState = newPage => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.removeFunc = (item, list) => {\n      const temp = [];\n      list.map(listItem => {\n        if (listItem !== item) {\n          temp.push(listItem);\n        }\n      });\n      return temp;\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.state = {\n      page: 'LandingPage',\n      previousPage: 'LandingPage',\n      searchValue: '',\n      currentPlaylist: {},\n      queue: [],\n      playlists: [{\n        name: 'Example',\n        songs: [{\n          name: '3 nights by',\n          artist: 'Dominic Fike'\n        }]\n      }],\n      songNames: [{\n        name: '3 nights by',\n        artist: 'Dominic Fike'\n      }, {\n        name: 'Bang!',\n        artist: 'AJR'\n      }, {\n        name: 'Tribe',\n        artist: 'Jim Swim'\n      }, {\n        name: 'Feels Right',\n        artist: 'Danny\\'s dead'\n      }, {\n        name: 'Mariposa',\n        artist: 'Peach Tree Rascals'\n      }, {\n        name: 'Blinding Lights',\n        artist: 'The Weeknd'\n      }, {\n        name: 'Thriller',\n        artist: 'Michael Jackson'\n      }, {\n        name: 'Yellow Submarine',\n        artist: 'The Beatles'\n      }, {\n        name: 'USSR',\n        artist: 'The Beatles'\n      }],\n      librarySongs: [{\n        name: 'Mariposa',\n        artist: 'Peach Tree Rascals'\n      }, {\n        name: 'Blinding Lights',\n        artist: 'The Weeknd'\n      }, {\n        name: 'Thriller',\n        artist: 'Michael Jackson'\n      }, {\n        name: 'Yellow Submarine',\n        artist: 'The Beatles'\n      }, {\n        name: 'USSR',\n        artist: 'The Beatles'\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, this.state.page === 'LandingPage' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Playlists' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        addButtonHandler: () => {\n          const newPlaylist = {\n            name: 'New Playlist ' + this.state.playlists.length,\n            songs: []\n          };\n          var temp = this.state.playlists;\n          temp.push(newPlaylist);\n          this.setState({\n            page: 'Edit List',\n            currentPlaylist: newPlaylist,\n            playlists: temp\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        removeOnClick: playlist => {\n          this.setState({\n            playlists: this.removeFunc(playlist, this.state.playlists)\n          });\n        },\n        data: this.state.playlists,\n        onClick: currentPlaylist => {\n          this.setState({\n            page: 'Edit List',\n            currentPlaylist\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Now Playing' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(NowPlaying, {\n        pageChanger: this.changeState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Search' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"song name\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.songNames,\n        onClick: song => {\n          if (this.state.previousPage === 'Edit List') {\n            var temp = this.state.currentPlaylist.songs;\n            temp.push(song);\n            this.setState({\n              currentPlaylist: { ...this.state.currentPlaylist,\n                songs: temp\n              }\n            });\n          } else if (this.state.previousPage === 'Library') {\n            var temp = this.state.librarySongs;\n            temp.push(song);\n            this.setState({\n              librarySongs: temp\n            });\n          } else if (this.state.previousPage === 'Edit Queue') {\n            var temp = this.state.queue;\n            temp.push(song);\n            this.setState({\n              queue: temp\n            });\n          } else {\n            console.log('oops');\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Library' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        addButtonHandler: () => {\n          this.setState({\n            page: 'Search',\n            previousPage: 'Library'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.librarySongs,\n        removeOnClick: song => {\n          this.setState({\n            librarySongs: this.removeFunc(song, this.state.librarySongs)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Edit List' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        name: this.state.currentPlaylist ? this.state.currentPlaylist.name : 'N/A',\n        addButtonHandler: () => {\n          this.setState({\n            page: 'Search',\n            previousPage: 'Edit List'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.currentPlaylist.songs,\n        removeOnClick: song => {\n          this.setState({\n            currentPlaylist: { ...this.state.currentPlaylist,\n              songs: this.removeFunc(song, this.state.currentPlaylist.songs)\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Edit Queue' && /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      contents: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        page: this.state.page,\n        name: 'Queue',\n        addButtonHandler: () => {\n          this.setState({\n            page: 'Search',\n            previousPage: 'Edit Queue'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ListView, {\n        pageChanger: this.changeState,\n        data: this.state.queue,\n        removeOnClick: song => {\n          this.setState({\n            queue: this.removeFunc(song, this.state.queue)\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tcnak/Documents/test/musicapp/src/App.js"],"names":["React","Page","ListView","Header","NowPlaying","App","PureComponent","constructor","props","changeState","newPage","setState","page","removeFunc","item","list","temp","map","listItem","push","handleChange","event","searchValue","target","value","state","previousPage","currentPlaylist","queue","playlists","name","songs","artist","songNames","librarySongs","render","newPlaylist","length","playlist","song","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,eAAe,MAAMC,GAAN,SAAkBL,KAAK,CAACM,aAAxB,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAkFlBC,WAlFkB,GAkFHC,OAAD,IAAa;AACzB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd;AACD,KApFiB;;AAAA,SAsFlBG,UAtFkB,GAsFL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC3B,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,IAAI,CAACE,GAAL,CAAUC,QAAD,IAAc;AACrB,YAAGA,QAAQ,KAAKJ,IAAhB,EAAqB;AACnBE,UAAAA,IAAI,CAACG,IAAL,CAAUD,QAAV;AACD;AACF,OAJD;AAKA,aAAOF,IAAP;AACD,KA9FiB;;AAAA,SAgGlBI,YAhGkB,GAgGFC,KAAD,IAAW;AACxB,WAAKV,QAAL,CAAc;AAACW,QAAAA,WAAW,EAAED,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd;AACD,KAlGiB;;AAEhB,SAAKC,KAAL,GAAa;AACXb,MAAAA,IAAI,EAAE,aADK;AAEXc,MAAAA,YAAY,EAAE,aAFH;AAGXJ,MAAAA,WAAW,EAAE,EAHF;AAIXK,MAAAA,eAAe,EAAE,EAJN;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,KAAK,EAAE,CACL;AACED,UAAAA,IAAI,EAAE,aADR;AAEEE,UAAAA,MAAM,EAAE;AAFV,SADK;AAFT,OADS,CANA;AAiBXC,MAAAA,SAAS,EAAE,CACT;AACEH,QAAAA,IAAI,EAAE,aADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OADS,EAKT;AACEF,QAAAA,IAAI,EAAE,OADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OALS,EAST;AACEF,QAAAA,IAAI,EAAE,OADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OATS,EAaT;AACEF,QAAAA,IAAI,EAAE,aADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAbS,EAiBT;AACEF,QAAAA,IAAI,EAAE,UADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAjBS,EAqBT;AACEF,QAAAA,IAAI,EAAE,iBADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OArBS,EAyBT;AACEF,QAAAA,IAAI,EAAE,UADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAzBS,EA6BT;AACEF,QAAAA,IAAI,EAAE,kBADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OA7BS,EAiCT;AACEF,QAAAA,IAAI,EAAE,MADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAjCS,CAjBA;AAuDXE,MAAAA,YAAY,EAAE,CACZ;AACEJ,QAAAA,IAAI,EAAE,UADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OADY,EAKZ;AACEF,QAAAA,IAAI,EAAE,iBADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OALY,EASZ;AACEF,QAAAA,IAAI,EAAE,UADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OATY,EAaZ;AACEF,QAAAA,IAAI,EAAE,kBADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAbY,EAiBZ;AACEF,QAAAA,IAAI,EAAE,MADR;AAEEE,QAAAA,MAAM,EAAE;AAFV,OAjBY;AAvDH,KAAb;AA8ED;;AAoBDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWb,IAAX,KAAoB,aAApB,gBACC,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAI,KAAKH,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEC,KAAKgB,KAAL,CAAWb,IAAX,KAAoB,WAApB,gBACA,oBAAC,IAAD;AACE,MAAA,WAAW,EAAI,KAAKH,WADtB;AAEE,MAAA,QAAQ,eACN,uDACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWb,IADrB;AAEE,QAAA,gBAAgB,EAAI,MAAM;AACxB,gBAAMwB,WAAW,GAAG;AAClBN,YAAAA,IAAI,EAAE,kBAAkB,KAAKL,KAAL,CAAWI,SAAX,CAAqBQ,MAD3B;AAElBN,YAAAA,KAAK,EAAE;AAFW,WAApB;AAIA,cAAIf,IAAI,GAAG,KAAKS,KAAL,CAAWI,SAAtB;AACAb,UAAAA,IAAI,CAACG,IAAL,CAAUiB,WAAV;AACA,eAAKzB,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAE,WAAP;AAAoBe,YAAAA,eAAe,EAAES,WAArC;AAAkDP,YAAAA,SAAS,EAAEb;AAA7D,WAAd;AACD,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAaE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAI,KAAKP,WADtB;AAEE,QAAA,aAAa,EAAK6B,QAAD,IAAc;AAC7B,eAAK3B,QAAL,CAAc;AAACkB,YAAAA,SAAS,EAAE,KAAKhB,UAAL,CAAgByB,QAAhB,EAA0B,KAAKb,KAAL,CAAWI,SAArC;AAAZ,WAAd;AACD,SAJH;AAKE,QAAA,IAAI,EAAI,KAAKJ,KAAL,CAAWI,SALrB;AAME,QAAA,OAAO,EAAKF,eAAD,IAAqB;AAC9B,eAAKhB,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAE,WAAP;AAAoBe,YAAAA;AAApB,WAAd;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GA8BA,KAAKF,KAAL,CAAWb,IAAX,KAAoB,aAApB,gBACA,oBAAC,IAAD;AACE,MAAA,WAAW,EAAI,KAAKH,WADtB;AAEE,MAAA,QAAQ,eACN,oBAAC,UAAD;AAAY,QAAA,WAAW,EAAI,KAAKA,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAOA,KAAKgB,KAAL,CAAWb,IAAX,KAAoB,QAApB,gBACA,oBAAC,IAAD;AACE,MAAA,WAAW,EAAI,KAAKH,WADtB;AAEE,MAAA,QAAQ,eACN,uDACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWb,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,IAAI,EAAG,WAA5B;AAAwC,QAAA,QAAQ,EAAI,KAAKQ,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAI,KAAKX,WADtB;AAEE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWQ,SAFrB;AAGE,QAAA,OAAO,EAAKM,IAAD,IAAU;AACnB,cAAI,KAAKd,KAAL,CAAWC,YAAX,KAA4B,WAAhC,EAA4C;AAC1C,gBAAIV,IAAI,GAAG,KAAKS,KAAL,CAAWE,eAAX,CAA2BI,KAAtC;AACAf,YAAAA,IAAI,CAACG,IAAL,CAAUoB,IAAV;AACA,iBAAK5B,QAAL,CAAc;AAACgB,cAAAA,eAAe,EAAE,EAC9B,GAAG,KAAKF,KAAL,CAAWE,eADgB;AAE9BI,gBAAAA,KAAK,EAAEf;AAFuB;AAAlB,aAAd;AAID,WAPD,MAOO,IAAI,KAAKS,KAAL,CAAWC,YAAX,KAA4B,SAAhC,EAA0C;AAC/C,gBAAIV,IAAI,GAAG,KAAKS,KAAL,CAAWS,YAAtB;AACAlB,YAAAA,IAAI,CAACG,IAAL,CAAUoB,IAAV;AACA,iBAAK5B,QAAL,CAAc;AAACuB,cAAAA,YAAY,EAAElB;AAAf,aAAd;AACD,WAJM,MAIA,IAAI,KAAKS,KAAL,CAAWC,YAAX,KAA4B,YAAhC,EAA6C;AAClD,gBAAIV,IAAI,GAAG,KAAKS,KAAL,CAAWG,KAAtB;AACAZ,YAAAA,IAAI,CAACG,IAAL,CAAUoB,IAAV;AACA,iBAAK5B,QAAL,CAAc;AAACiB,cAAAA,KAAK,EAAEZ;AAAR,aAAd;AACD,WAJM,MAIA;AACLwB,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,SAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAkCA,KAAKhB,KAAL,CAAWb,IAAX,KAAoB,SAApB,gBACA,oBAAC,IAAD;AACE,MAAA,WAAW,EAAI,KAAKH,WADtB;AAEE,MAAA,QAAQ,eACN,uDACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWb,IADrB;AAEE,QAAA,gBAAgB,EAAI,MAAM;AACxB,eAAKD,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAE,QAAP;AAAiBc,YAAAA,YAAY,EAAE;AAA/B,WAAd;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAOE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAI,KAAKjB,WADtB;AAEE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWS,YAFrB;AAGE,QAAA,aAAa,EAAKK,IAAD,IAAU;AACzB,eAAK5B,QAAL,CAAc;AAACuB,YAAAA,YAAY,EAAE,KAAKrB,UAAL,CAAgB0B,IAAhB,EAAsB,KAAKd,KAAL,CAAWS,YAAjC;AAAf,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAqBA,KAAKT,KAAL,CAAWb,IAAX,KAAoB,WAApB,gBACA,oBAAC,IAAD;AACE,MAAA,WAAW,EAAI,KAAKH,WADtB;AAEE,MAAA,QAAQ,eACN,uDACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWb,IADrB;AAEE,QAAA,IAAI,EAAI,KAAKa,KAAL,CAAWE,eAAX,GAA6B,KAAKF,KAAL,CAAWE,eAAX,CAA2BG,IAAxD,GAA+D,KAFzE;AAGE,QAAA,gBAAgB,EAAI,MAAM;AACxB,eAAKnB,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAE,QAAP;AAAiBc,YAAAA,YAAY,EAAE;AAA/B,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAQE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAI,KAAKjB,WADtB;AAEE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWE,eAAX,CAA2BI,KAFrC;AAGE,QAAA,aAAa,EAAKQ,IAAD,IAAU;AACzB,eAAK5B,QAAL,CAAc;AAACgB,YAAAA,eAAe,EAAE,EAC9B,GAAG,KAAKF,KAAL,CAAWE,eADgB;AAE9BI,cAAAA,KAAK,EAAE,KAAKlB,UAAL,CAAgB0B,IAAhB,EAAsB,KAAKd,KAAL,CAAWE,eAAX,CAA2BI,KAAjD;AAFuB;AAAlB,WAAd;AAID,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAyBE,KAAKN,KAAL,CAAWb,IAAX,KAAoB,YAApB,iBACF,oBAAC,IAAD;AACE,MAAA,WAAW,EAAI,KAAKH,WADtB;AAEE,MAAA,QAAQ,eACN,uDACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWb,IADrB;AAEE,QAAA,IAAI,EAAI,OAFV;AAGE,QAAA,gBAAgB,EAAI,MAAM;AACxB,eAAKD,QAAL,CAAc;AAACC,YAAAA,IAAI,EAAE,QAAP;AAAiBc,YAAAA,YAAY,EAAE;AAA/B,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAQE,oBAAC,QAAD;AACE,QAAA,WAAW,EAAI,KAAKjB,WADtB;AAEE,QAAA,IAAI,EAAI,KAAKgB,KAAL,CAAWG,KAFrB;AAGE,QAAA,aAAa,EAAKW,IAAD,IAAU;AACzB,eAAK5B,QAAL,CAAc;AAACiB,YAAAA,KAAK,EAAE,KAAKf,UAAL,CAAgB0B,IAAhB,EAAsB,KAAKd,KAAL,CAAWG,KAAjC;AAAR,WAAd;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzHJ,CADF;AAiJD;;AAvPkD","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Page from './Components/Page';\nimport ListView from './Components/ListView';\nimport Header from './Components/Header';\nimport NowPlaying from './Components/NowPlaying';\n\nexport default class App extends React.PureComponent {\n  constructor(props){\n    super(props)\n    this.state = {\n      page: 'LandingPage',\n      previousPage: 'LandingPage',\n      searchValue: '',\n      currentPlaylist: {},\n      queue: [],\n      playlists: [\n        {\n          name: 'Example',\n          songs: [\n            {\n              name: '3 nights by',\n              artist: 'Dominic Fike'\n            }, \n          ]\n        }\n      ],\n      songNames: [\n        {\n          name: '3 nights by',\n          artist: 'Dominic Fike'\n        }, \n        {\n          name: 'Bang!',\n          artist: 'AJR',\n        },\n        {\n          name: 'Tribe',\n          artist: 'Jim Swim'\n        },\n        {\n          name: 'Feels Right',\n          artist: 'Danny\\'s dead'\n        },\n        {\n          name: 'Mariposa',\n          artist: 'Peach Tree Rascals'\n        },\n        {\n          name: 'Blinding Lights',\n          artist: 'The Weeknd'\n        },\n        {\n          name: 'Thriller',\n          artist: 'Michael Jackson'\n        },\n        {\n          name: 'Yellow Submarine',\n          artist: 'The Beatles'\n        },\n        {\n          name: 'USSR',\n          artist: 'The Beatles'\n        },\n      ],\n      librarySongs: [\n        {\n          name: 'Mariposa',\n          artist: 'Peach Tree Rascals'\n        },\n        {\n          name: 'Blinding Lights',\n          artist: 'The Weeknd'\n        },\n        {\n          name: 'Thriller',\n          artist: 'Michael Jackson'\n        },\n        {\n          name: 'Yellow Submarine',\n          artist: 'The Beatles'\n        },\n        {\n          name: 'USSR',\n          artist: 'The Beatles'\n        },\n      ],\n    }\n  }\n\n  changeState = (newPage) => {\n    this.setState({page: newPage})\n  }\n\n  removeFunc = (item, list) => {\n    const temp = []\n    list.map((listItem) => {\n      if(listItem !== item){\n        temp.push(listItem)\n      }\n    })\n    return temp\n  }\n\n  handleChange = (event) => {\n    this.setState({searchValue: event.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.page === 'LandingPage' ?\n          <Page pageChanger = {this.changeState}/>\n        : this.state.page === 'Playlists' ?\n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header \n                  page = {this.state.page}\n                  addButtonHandler = {() => {\n                    const newPlaylist = {\n                      name: 'New Playlist ' + this.state.playlists.length,\n                      songs: []\n                    }\n                    var temp = this.state.playlists\n                    temp.push(newPlaylist)\n                    this.setState({page: 'Edit List', currentPlaylist: newPlaylist, playlists: temp})\n                  }}\n                />\n                <ListView \n                  pageChanger = {this.changeState} \n                  removeOnClick = {(playlist) => {\n                    this.setState({playlists: this.removeFunc(playlist, this.state.playlists)})\n                  }}\n                  data = {this.state.playlists}\n                  onClick = {(currentPlaylist) => {\n                    this.setState({page: 'Edit List', currentPlaylist})\n                  }}\n                />\n              </>\n            }\n          />\n        : this.state.page === 'Now Playing' ?\n          <Page \n            pageChanger = {this.changeState}\n            contents = {\n              <NowPlaying pageChanger = {this.changeState}/>\n            }\n          />\n        : this.state.page === 'Search' ?\n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header page = {this.state.page}/>\n                <input type = 'text' name = 'song name' onChange = {this.handleChange}/>\n                <ListView \n                  pageChanger = {this.changeState} \n                  data = {this.state.songNames}\n                  onClick = {(song) => {\n                    if (this.state.previousPage === 'Edit List'){\n                      var temp = this.state.currentPlaylist.songs\n                      temp.push(song)\n                      this.setState({currentPlaylist: {\n                        ...this.state.currentPlaylist,\n                        songs: temp\n                      }})\n                    } else if (this.state.previousPage === 'Library'){\n                      var temp = this.state.librarySongs\n                      temp.push(song)\n                      this.setState({librarySongs: temp})\n                    } else if (this.state.previousPage === 'Edit Queue'){\n                      var temp = this.state.queue\n                      temp.push(song)\n                      this.setState({queue: temp})\n                    } else {\n                      console.log('oops')\n                    }\n                  }}\n                />\n              </>\n            }\n          />\n        : this.state.page === 'Library' ?\n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header \n                  page = {this.state.page}\n                  addButtonHandler = {() => {\n                    this.setState({page: 'Search', previousPage: 'Library'})\n                  }}\n                />\n                <ListView \n                  pageChanger = {this.changeState} \n                  data = {this.state.librarySongs}\n                  removeOnClick = {(song) => {\n                    this.setState({librarySongs: this.removeFunc(song, this.state.librarySongs)})\n                  }}\n                />\n              </>\n            }\n          />\n        : this.state.page === 'Edit List' ? \n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header \n                  page = {this.state.page}\n                  name = {this.state.currentPlaylist ? this.state.currentPlaylist.name : 'N/A'}\n                  addButtonHandler = {() => {\n                    this.setState({page: 'Search', previousPage: 'Edit List'})\n                  }}\n                />\n                <ListView \n                  pageChanger = {this.changeState} \n                  data = {this.state.currentPlaylist.songs}\n                  removeOnClick = {(song) => {\n                    this.setState({currentPlaylist: {\n                      ...this.state.currentPlaylist,\n                      songs: this.removeFunc(song, this.state.currentPlaylist.songs)\n                    }})\n                  }}\n                />\n              </>\n            }\n          />\n          : this.state.page === 'Edit Queue' && \n          <Page \n            pageChanger = {this.changeState} \n            contents = {\n              <>\n                <Header \n                  page = {this.state.page}\n                  name = {'Queue'}\n                  addButtonHandler = {() => {\n                    this.setState({page: 'Search', previousPage: 'Edit Queue'})\n                  }}\n                />\n                <ListView \n                  pageChanger = {this.changeState} \n                  data = {this.state.queue}\n                  removeOnClick = {(song) => {\n                    this.setState({queue: this.removeFunc(song, this.state.queue)})\n                  }}\n                />\n              </>\n            }\n          />}\n      </div>\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}