{"ast":null,"code":"var _jsxFileName = \"/Users/tcnak/Documents/musicApp/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Page from './Components/Page';\nimport Playlists from './Pages/Playlists';\nimport NowPlayingPage from './Pages/NowPlayingPage';\nimport EditPlaylist from './Pages/EditPlaylist';\nimport EditQueue from './Pages/EditQueue';\nimport Search from './Pages/Search';\nimport Library from './Pages/Library';\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.changeState = newPage => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.removeFunc = (item, list) => {\n      const temp = [];\n      list.forEach(listItem => {\n        if (listItem !== item) {\n          temp.push(listItem);\n        }\n      });\n      return temp;\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n      var temp = [];\n      this.state.songNames.forEach(song => {\n        if (song.name.toLowerCase().includes(this.state.searchValue.toLowerCase())) {\n          temp.push(song);\n        }\n      });\n      this.setState({\n        searchResults: temp\n      });\n    };\n\n    this.state = {\n      page: 'LandingPage',\n      previousPage: 'LandingPage',\n      searchValue: '',\n      currentPlaylist: {},\n      queue: [],\n      playlists: [{\n        name: 'Example',\n        songs: [{\n          name: '3 nights by',\n          artist: 'Dominic Fike'\n        }]\n      }],\n      songNames: [{\n        name: '3 nights by',\n        artist: 'Dominic Fike'\n      }, {\n        name: 'Bang!',\n        artist: 'AJR'\n      }, {\n        name: 'Tribe',\n        artist: 'Jim Swim'\n      }, {\n        name: 'Feels Right',\n        artist: 'Danny\\'s dead'\n      }, {\n        name: 'Mariposa',\n        artist: 'Peach Tree Rascals'\n      }, {\n        name: 'Blinding Lights',\n        artist: 'The Weeknd'\n      }, {\n        name: 'Thriller',\n        artist: 'Michael Jackson'\n      }, {\n        name: 'Yellow Submarine',\n        artist: 'The Beatles'\n      }, {\n        name: 'USSR',\n        artist: 'The Beatles'\n      }],\n      searchResults: [],\n      librarySongs: [{\n        name: 'Mariposa',\n        artist: 'Peach Tree Rascals'\n      }, {\n        name: 'Blinding Lights',\n        artist: 'The Weeknd'\n      }, {\n        name: 'Thriller',\n        artist: 'Michael Jackson'\n      }, {\n        name: 'Yellow Submarine',\n        artist: 'The Beatles'\n      }, {\n        name: 'USSR',\n        artist: 'The Beatles'\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Album, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), \"  Popify  \", /*#__PURE__*/React.createElement(Album, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 32\n      }\n    })), this.state.page === 'LandingPage' ? /*#__PURE__*/React.createElement(Page, {\n      pageChanger: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Playlists' ? /*#__PURE__*/React.createElement(Playlists, {\n      state: this.state,\n      setState: newState => this.setState(newState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Now Playing' ? /*#__PURE__*/React.createElement(NowPlayingPage, {\n      setState: newState => this.setState(newState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Search' ? /*#__PURE__*/React.createElement(Search, {\n      state: this.state,\n      setState: newState => this.setState(newState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Library' ? /*#__PURE__*/React.createElement(Library, {\n      state: this.state,\n      setState: newState => this.setState(newState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Edit List' ? /*#__PURE__*/React.createElement(EditPlaylist, {\n      state: this.state,\n      setState: newState => this.setState(newState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }) : this.state.page === 'Edit Queue' && /*#__PURE__*/React.createElement(EditQueue, {\n      state: this.state,\n      setState: newState => this.setState(newState),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/tcnak/Documents/musicApp/src/App.js"],"names":["React","Page","Playlists","NowPlayingPage","EditPlaylist","EditQueue","Search","Library","App","PureComponent","constructor","props","changeState","newPage","setState","page","removeFunc","item","list","temp","forEach","listItem","push","handleChange","event","searchValue","target","value","state","songNames","song","name","toLowerCase","includes","searchResults","previousPage","currentPlaylist","queue","playlists","songs","artist","librarySongs","render","newState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,eAAe,MAAMC,GAAN,SAAkBR,KAAK,CAACS,aAAxB,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAmFlBC,WAnFkB,GAmFHC,OAAD,IAAa;AACzB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd;AACD,KArFiB;;AAAA,SAuFlBG,UAvFkB,GAuFL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC3B,YAAMC,IAAI,GAAG,EAAb;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAcC,QAAD,IAAc;AACzB,YAAGA,QAAQ,KAAKJ,IAAhB,EAAqB;AACnBE,UAAAA,IAAI,CAACG,IAAL,CAAUD,QAAV;AACD;AACF,OAJD;AAKA,aAAOF,IAAP;AACD,KA/FiB;;AAAA,SAiGlBI,YAjGkB,GAiGFC,KAAD,IAAW;AACxB,WAAKV,QAAL,CAAc;AAACW,QAAAA,WAAW,EAAED,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd;AACA,UAAIR,IAAI,GAAG,EAAX;AACA,WAAKS,KAAL,CAAWC,SAAX,CAAqBT,OAArB,CAA8BU,IAAD,IAAU;AACrC,YAAGA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiC,KAAKL,KAAL,CAAWH,WAAX,CAAuBO,WAAvB,EAAjC,CAAH,EAA0E;AACxEb,UAAAA,IAAI,CAACG,IAAL,CAAUQ,IAAV;AACD;AACF,OAJD;AAKA,WAAKhB,QAAL,CAAc;AAACoB,QAAAA,aAAa,EAAEf;AAAhB,OAAd;AACD,KA1GiB;;AAEhB,SAAKS,KAAL,GAAa;AACXb,MAAAA,IAAI,EAAE,aADK;AAEXoB,MAAAA,YAAY,EAAE,aAFH;AAGXV,MAAAA,WAAW,EAAE,EAHF;AAIXW,MAAAA,eAAe,EAAE,EAJN;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,SAAS,EAAE,CACT;AACEP,QAAAA,IAAI,EAAE,SADR;AAEEQ,QAAAA,KAAK,EAAE,CACL;AACER,UAAAA,IAAI,EAAE,aADR;AAEES,UAAAA,MAAM,EAAE;AAFV,SADK;AAFT,OADS,CANA;AAiBXX,MAAAA,SAAS,EAAE,CACT;AACEE,QAAAA,IAAI,EAAE,aADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OADS,EAKT;AACET,QAAAA,IAAI,EAAE,OADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OALS,EAST;AACET,QAAAA,IAAI,EAAE,OADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OATS,EAaT;AACET,QAAAA,IAAI,EAAE,aADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OAbS,EAiBT;AACET,QAAAA,IAAI,EAAE,UADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OAjBS,EAqBT;AACET,QAAAA,IAAI,EAAE,iBADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OArBS,EAyBT;AACET,QAAAA,IAAI,EAAE,UADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OAzBS,EA6BT;AACET,QAAAA,IAAI,EAAE,kBADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OA7BS,EAiCT;AACET,QAAAA,IAAI,EAAE,MADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OAjCS,CAjBA;AAuDXN,MAAAA,aAAa,EAAE,EAvDJ;AAwDXO,MAAAA,YAAY,EAAE,CACZ;AACEV,QAAAA,IAAI,EAAE,UADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OADY,EAKZ;AACET,QAAAA,IAAI,EAAE,iBADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OALY,EASZ;AACET,QAAAA,IAAI,EAAE,UADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OATY,EAaZ;AACET,QAAAA,IAAI,EAAE,kBADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OAbY,EAiBZ;AACET,QAAAA,IAAI,EAAE,MADR;AAEES,QAAAA,MAAM,EAAE;AAFV,OAjBY;AAxDH,KAAb;AA+ED;;AA2BDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,6BAAuB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,CADF,EAEG,KAAKd,KAAL,CAAWb,IAAX,KAAoB,aAApB,gBACC,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAI,KAAKH,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEC,KAAKgB,KAAL,CAAWb,IAAX,KAAoB,WAApB,gBACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAI,KAAKa,KAAzB;AAAgC,MAAA,QAAQ,EAAKe,QAAD,IAAc,KAAK7B,QAAL,CAAc6B,QAAd,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,KAAKf,KAAL,CAAWb,IAAX,KAAoB,aAApB,gBACA,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAK4B,QAAD,IAAc,KAAK7B,QAAL,CAAc6B,QAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,KAAKf,KAAL,CAAWb,IAAX,KAAoB,QAApB,gBACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAI,KAAKa,KAAtB;AAA6B,MAAA,QAAQ,EAAKe,QAAD,IAAc,KAAK7B,QAAL,CAAc6B,QAAd,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,KAAKf,KAAL,CAAWb,IAAX,KAAoB,SAApB,gBACA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAI,KAAKa,KAAvB;AAA8B,MAAA,QAAQ,EAAKe,QAAD,IAAc,KAAK7B,QAAL,CAAc6B,QAAd,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,KAAKf,KAAL,CAAWb,IAAX,KAAoB,WAApB,gBACA,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAI,KAAKa,KAA5B;AAAmC,MAAA,QAAQ,EAAKe,QAAD,IAAc,KAAK7B,QAAL,CAAc6B,QAAd,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAEA,KAAKf,KAAL,CAAWb,IAAX,KAAoB,YAApB,iBACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAI,KAAKa,KAAzB;AAAgC,MAAA,QAAQ,EAAKe,QAAD,IAAc,KAAK7B,QAAL,CAAc6B,QAAd,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADF;AAoBD;;AAlIkD","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Page from './Components/Page';\nimport Playlists from './Pages/Playlists'\nimport NowPlayingPage from './Pages/NowPlayingPage';\nimport EditPlaylist from './Pages/EditPlaylist';\nimport EditQueue from './Pages/EditQueue';\nimport Search from './Pages/Search';\nimport Library from './Pages/Library';\n\nexport default class App extends React.PureComponent {\n  constructor(props){\n    super(props)\n    this.state = {\n      page: 'LandingPage',\n      previousPage: 'LandingPage',\n      searchValue: '',\n      currentPlaylist: {},\n      queue: [],\n      playlists: [\n        {\n          name: 'Example',\n          songs: [\n            {\n              name: '3 nights by',\n              artist: 'Dominic Fike'\n            }, \n          ]\n        }\n      ],\n      songNames: [\n        {\n          name: '3 nights by',\n          artist: 'Dominic Fike'\n        }, \n        {\n          name: 'Bang!',\n          artist: 'AJR',\n        },\n        {\n          name: 'Tribe',\n          artist: 'Jim Swim'\n        },\n        {\n          name: 'Feels Right',\n          artist: 'Danny\\'s dead'\n        },\n        {\n          name: 'Mariposa',\n          artist: 'Peach Tree Rascals'\n        },\n        {\n          name: 'Blinding Lights',\n          artist: 'The Weeknd'\n        },\n        {\n          name: 'Thriller',\n          artist: 'Michael Jackson'\n        },\n        {\n          name: 'Yellow Submarine',\n          artist: 'The Beatles'\n        },\n        {\n          name: 'USSR',\n          artist: 'The Beatles'\n        },\n      ],\n      searchResults: [],\n      librarySongs: [\n        {\n          name: 'Mariposa',\n          artist: 'Peach Tree Rascals'\n        },\n        {\n          name: 'Blinding Lights',\n          artist: 'The Weeknd'\n        },\n        {\n          name: 'Thriller',\n          artist: 'Michael Jackson'\n        },\n        {\n          name: 'Yellow Submarine',\n          artist: 'The Beatles'\n        },\n        {\n          name: 'USSR',\n          artist: 'The Beatles'\n        },\n      ],\n    }\n  }\n\n  changeState = (newPage) => {\n    this.setState({page: newPage})\n  }\n\n  removeFunc = (item, list) => {\n    const temp = []\n    list.forEach((listItem) => {\n      if(listItem !== item){\n        temp.push(listItem)\n      }\n    })\n    return temp\n  }\n\n  handleChange = (event) => {\n    this.setState({searchValue: event.target.value});\n    var temp = []\n    this.state.songNames.forEach((song) => {\n      if(song.name.toLowerCase().includes(this.state.searchValue.toLowerCase())){\n        temp.push(song)\n      }\n    })\n    this.setState({searchResults: temp})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1><Album />  Popify  <Album /></h1>\n        {this.state.page === 'LandingPage' ?\n          <Page pageChanger = {this.changeState}/>\n        : this.state.page === 'Playlists' ?\n          <Playlists state = {this.state} setState = {(newState) => this.setState(newState)}/>\n        : this.state.page === 'Now Playing' ?\n          <NowPlayingPage setState = {(newState) => this.setState(newState)}/>\n        : this.state.page === 'Search' ?\n          <Search state = {this.state} setState = {(newState) => this.setState(newState)}/>\n        : this.state.page === 'Library' ?\n          <Library state = {this.state} setState = {(newState) => this.setState(newState)}/>\n        : this.state.page === 'Edit List' ? \n          <EditPlaylist state = {this.state} setState = {(newState) => this.setState(newState)}/>\n        : this.state.page === 'Edit Queue' && \n          <EditQueue state = {this.state} setState = {(newState) => this.setState(newState)}/>\n        }\n      </div>\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}